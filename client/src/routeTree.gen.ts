/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as AuthenticatedDocumentsRouteImport } from './routes/_authenticated/documents'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedRentersIndexRouteImport } from './routes/_authenticated/renters/index'
import { Route as AuthenticatedPropertiesIndexRouteImport } from './routes/_authenticated/properties/index'
import { Route as AuthenticatedPaymentsIndexRouteImport } from './routes/_authenticated/payments/index'
import { Route as AuthenticatedMaintenanceIndexRouteImport } from './routes/_authenticated/maintenance/index'
import { Route as AuthenticatedRentersCommunicationsRouteImport } from './routes/_authenticated/renters/communications'
import { Route as AuthenticatedRentersRenterIdRouteImport } from './routes/_authenticated/renters/$renterId'
import { Route as AuthenticatedPropertiesPropertyIdRouteImport } from './routes/_authenticated/properties/$propertyId'

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const AuthenticatedDocumentsRoute = AuthenticatedDocumentsRouteImport.update({
  id: '/documents',
  path: '/documents',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedRentersIndexRoute =
  AuthenticatedRentersIndexRouteImport.update({
    id: '/renters/',
    path: '/renters/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedPropertiesIndexRoute =
  AuthenticatedPropertiesIndexRouteImport.update({
    id: '/properties/',
    path: '/properties/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedPaymentsIndexRoute =
  AuthenticatedPaymentsIndexRouteImport.update({
    id: '/payments/',
    path: '/payments/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedMaintenanceIndexRoute =
  AuthenticatedMaintenanceIndexRouteImport.update({
    id: '/maintenance/',
    path: '/maintenance/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedRentersCommunicationsRoute =
  AuthenticatedRentersCommunicationsRouteImport.update({
    id: '/renters/communications',
    path: '/renters/communications',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedRentersRenterIdRoute =
  AuthenticatedRentersRenterIdRouteImport.update({
    id: '/renters/$renterId',
    path: '/renters/$renterId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedPropertiesPropertyIdRoute =
  AuthenticatedPropertiesPropertyIdRouteImport.update({
    id: '/properties/$propertyId',
    path: '/properties/$propertyId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRouteWithChildren
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/documents': typeof AuthenticatedDocumentsRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/properties/$propertyId': typeof AuthenticatedPropertiesPropertyIdRoute
  '/renters/$renterId': typeof AuthenticatedRentersRenterIdRoute
  '/renters/communications': typeof AuthenticatedRentersCommunicationsRoute
  '/maintenance': typeof AuthenticatedMaintenanceIndexRoute
  '/payments': typeof AuthenticatedPaymentsIndexRoute
  '/properties': typeof AuthenticatedPropertiesIndexRoute
  '/renters': typeof AuthenticatedRentersIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteWithChildren
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/documents': typeof AuthenticatedDocumentsRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/properties/$propertyId': typeof AuthenticatedPropertiesPropertyIdRoute
  '/renters/$renterId': typeof AuthenticatedRentersRenterIdRoute
  '/renters/communications': typeof AuthenticatedRentersCommunicationsRoute
  '/maintenance': typeof AuthenticatedMaintenanceIndexRoute
  '/payments': typeof AuthenticatedPaymentsIndexRoute
  '/properties': typeof AuthenticatedPropertiesIndexRoute
  '/renters': typeof AuthenticatedRentersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/_authenticated/documents': typeof AuthenticatedDocumentsRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/_authenticated/properties/$propertyId': typeof AuthenticatedPropertiesPropertyIdRoute
  '/_authenticated/renters/$renterId': typeof AuthenticatedRentersRenterIdRoute
  '/_authenticated/renters/communications': typeof AuthenticatedRentersCommunicationsRoute
  '/_authenticated/maintenance/': typeof AuthenticatedMaintenanceIndexRoute
  '/_authenticated/payments/': typeof AuthenticatedPaymentsIndexRoute
  '/_authenticated/properties/': typeof AuthenticatedPropertiesIndexRoute
  '/_authenticated/renters/': typeof AuthenticatedRentersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/dashboard'
    | '/documents'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/properties/$propertyId'
    | '/renters/$renterId'
    | '/renters/communications'
    | '/maintenance'
    | '/payments'
    | '/properties'
    | '/renters'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/dashboard'
    | '/documents'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/properties/$propertyId'
    | '/renters/$renterId'
    | '/renters/communications'
    | '/maintenance'
    | '/payments'
    | '/properties'
    | '/renters'
  id:
    | '__root__'
    | '/_authenticated'
    | '/auth'
    | '/_authenticated/dashboard'
    | '/_authenticated/documents'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/_authenticated/properties/$propertyId'
    | '/_authenticated/renters/$renterId'
    | '/_authenticated/renters/communications'
    | '/_authenticated/maintenance/'
    | '/_authenticated/payments/'
    | '/_authenticated/properties/'
    | '/_authenticated/renters/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_authenticated/documents': {
      id: '/_authenticated/documents'
      path: '/documents'
      fullPath: '/documents'
      preLoaderRoute: typeof AuthenticatedDocumentsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/renters/': {
      id: '/_authenticated/renters/'
      path: '/renters'
      fullPath: '/renters'
      preLoaderRoute: typeof AuthenticatedRentersIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/properties/': {
      id: '/_authenticated/properties/'
      path: '/properties'
      fullPath: '/properties'
      preLoaderRoute: typeof AuthenticatedPropertiesIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/payments/': {
      id: '/_authenticated/payments/'
      path: '/payments'
      fullPath: '/payments'
      preLoaderRoute: typeof AuthenticatedPaymentsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/maintenance/': {
      id: '/_authenticated/maintenance/'
      path: '/maintenance'
      fullPath: '/maintenance'
      preLoaderRoute: typeof AuthenticatedMaintenanceIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/renters/communications': {
      id: '/_authenticated/renters/communications'
      path: '/renters/communications'
      fullPath: '/renters/communications'
      preLoaderRoute: typeof AuthenticatedRentersCommunicationsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/renters/$renterId': {
      id: '/_authenticated/renters/$renterId'
      path: '/renters/$renterId'
      fullPath: '/renters/$renterId'
      preLoaderRoute: typeof AuthenticatedRentersRenterIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/properties/$propertyId': {
      id: '/_authenticated/properties/$propertyId'
      path: '/properties/$propertyId'
      fullPath: '/properties/$propertyId'
      preLoaderRoute: typeof AuthenticatedPropertiesPropertyIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedDocumentsRoute: typeof AuthenticatedDocumentsRoute
  AuthenticatedPropertiesPropertyIdRoute: typeof AuthenticatedPropertiesPropertyIdRoute
  AuthenticatedRentersRenterIdRoute: typeof AuthenticatedRentersRenterIdRoute
  AuthenticatedRentersCommunicationsRoute: typeof AuthenticatedRentersCommunicationsRoute
  AuthenticatedMaintenanceIndexRoute: typeof AuthenticatedMaintenanceIndexRoute
  AuthenticatedPaymentsIndexRoute: typeof AuthenticatedPaymentsIndexRoute
  AuthenticatedPropertiesIndexRoute: typeof AuthenticatedPropertiesIndexRoute
  AuthenticatedRentersIndexRoute: typeof AuthenticatedRentersIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedDocumentsRoute: AuthenticatedDocumentsRoute,
  AuthenticatedPropertiesPropertyIdRoute:
    AuthenticatedPropertiesPropertyIdRoute,
  AuthenticatedRentersRenterIdRoute: AuthenticatedRentersRenterIdRoute,
  AuthenticatedRentersCommunicationsRoute:
    AuthenticatedRentersCommunicationsRoute,
  AuthenticatedMaintenanceIndexRoute: AuthenticatedMaintenanceIndexRoute,
  AuthenticatedPaymentsIndexRoute: AuthenticatedPaymentsIndexRoute,
  AuthenticatedPropertiesIndexRoute: AuthenticatedPropertiesIndexRoute,
  AuthenticatedRentersIndexRoute: AuthenticatedRentersIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface AuthRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
